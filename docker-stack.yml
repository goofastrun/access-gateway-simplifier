version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  backend:
    image: ${DOCKER_HUB_USERNAME}/backend:latest
    depends_on:
      - db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app_db
      POSTGRES_HOST: db
    networks:
      - app_network
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  frontend:
    image: ${DOCKER_HUB_USERNAME}/frontend:latest
    networks:
      - app_network
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  nginx:
    image: ${DOCKER_HUB_USERNAME}/nginx:latest
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    networks:
      - app_network
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

networks:
  app_network:
    driver: overlay

volumes:
  postgres_data: